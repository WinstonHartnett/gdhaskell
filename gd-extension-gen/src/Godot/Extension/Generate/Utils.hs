{-# LANGUAGE BlockArguments #-}
{-# LANGUAGE OverloadedStrings #-}

module Godot.Extension.Generate.Utils where

import Data.Char (toUpper)
import Data.Foldable (foldl')
import qualified Data.Text as T

camelSubsitutions :: [(T.Text, T.Text)]
camelSubsitutions =
  [ ("GDNative", "Gdnative")
  ]

capitalizeFirst :: T.Text -> T.Text
capitalizeFirst t =
  if T.null t
    then t
    else (T.singleton . toUpper $ T.head t) <> T.tail t

toCamelCase :: T.Text -> T.Text
toCamelCase t =
  let (first, rest) = T.breakOn "_" t
      splitRest = map capitalizeFirst . filter (not . T.null) $ T.splitOn "_" rest
      replaceCustom i =
        foldl'
          (\acc (needle, target) -> T.replace needle target acc)
          i
          camelSubsitutions
   in mconcat $ map replaceCustom (first : splitRest)

autoGenHeader :: T.Text
autoGenHeader = "{- This file was generated by `gd-extension-gen`. -}"